<launch>

    <!-- Environment variables for locale and GUI -->
    <env name="LC_ALL" value="C.UTF-8"/>
    <env name="LANG" value="C.UTF-8"/>
    <!-- Force CUDA usage for PyTorch models -->
    <env name="CUDA_VISIBLE_DEVICES" value="0"/>

    <!-- ============================================================ -->
    <!-- ENVIRONMENT AND TASK CONFIGURATION                          -->
    <!-- ============================================================ -->
    
    <!-- Environment selection (office, supermarket, home, or custom) -->
    <arg name="environment" default="office" doc="Environment type: office, supermarket, home, or custom"/>
    
    <!-- Task and region files - automatically selected based on environment -->
    <arg name="object_tasks_file" default="" doc="File to read object tasks from (empty = use environment default)"/>
    <arg name="place_tasks_file" default="" doc="File to read place tasks from (empty = use environment default)"/>
    
    <!-- Conditionally set default task files based on environment -->
    <arg name="default_object_tasks_file" value="$(find clio_annotator)/environments/$(arg environment)/tasks.yaml"/>
    <arg name="default_place_tasks_file" value="$(find clio_annotator)/environments/$(arg environment)/regions.yaml"/>
    
    <!-- Use custom files if provided, otherwise use environment defaults -->
    <arg name="final_object_tasks_file" value="$(arg object_tasks_file)" 
         if="$(eval arg('object_tasks_file') != '')"/>
    <arg name="final_object_tasks_file" value="$(arg default_object_tasks_file)" 
         unless="$(eval arg('object_tasks_file') != '')"/>
         
    <arg name="final_place_tasks_file" value="$(arg place_tasks_file)" 
         if="$(eval arg('place_tasks_file') != '')"/>
    <arg name="final_place_tasks_file" value="$(arg default_place_tasks_file)" 
         unless="$(eval arg('place_tasks_file') != '')"/>

    <!-- ============================================================ -->
    <!-- REALSENSE CAMERA CONFIGURATION                              -->
    <!-- ============================================================ -->
    
    <!-- Realsense camera -->
    <!-- substitute roslaunch realsense2_camera rs_camera.launch align_depth:=true enable_sync:=true publish_tf:=true pointcloud:=true -->
    <arg name="camera_name" default="camera"/>
    <arg name="camera_base_frame" default="$(arg camera_name)_link" doc="Base frame published by the RealSense driver"/>
    <arg name="serial_no" default="" doc="Serial number of the RealSense camera"/>
    <arg name="device_type" default="" doc="Device type filter (e.g. d435)"/>
    <arg name="initial_reset" default="false"/> 
    <include file="$(find realsense2_camera)/launch/rs_camera.launch">
        <arg name="camera" value="$(arg camera_name)"/>
        <arg name="serial_no" value="$(arg serial_no)" if="$(eval arg('serial_no') != '')"/>
        <arg name="device_type" value="$(arg device_type)" if="$(eval arg('device_type') != '')"/>
        <arg name="initial_reset" value="$(arg initial_reset)"/>
        <arg name="enable_color" value="true"/>
        <arg name="enable_depth" value="true"/>
        <arg name="enable_sync" value="true"/>
        <arg name="align_depth" value="true"/>
        <arg name="publish_tf" value="true"/>
    </include>
  
    <!-- ============================================================ -->
    <!-- CLIO GENERAL CONFIGURATION                                  -->
    <!-- ============================================================ -->
    
    <!-- rosbag controls -->
    <arg name="sim_time_required" default="false"/>
    <param name="use_sim_time" value="$(arg sim_time_required)"/>
    <!-- general configuration -->
    <arg name="dataset_name" default="realsense" doc="Dataset name (used for parsing config)"/>
    <arg name="ablation_name" default="realsense_fine" doc="Ablation name (used for parsing config)"/>
    <arg name="segmenter_config" default="$(find clio_ros)/config/segmentation/large_clip.yaml" doc="openset segmentation config to use"/>
    <!-- tf frames -->
    <arg name="map_frame" default="world"/>
    <arg name="odom_frame" default="world"/>
    <arg name="robot_frame" default="dominic/forward_link"/>
    <arg name="sensor_frame" default="$(arg camera_name)_color_optical_frame"/>

    <!-- Static transforms to anchor the camera in the CLIO world frame -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_robot_tf"
        args="0 0 0 0 0 0 $(arg map_frame) $(arg robot_frame)"/>
    <node pkg="tf2_ros" type="static_transform_publisher" name="robot_to_camera_tf"
        args="0 0 0 0 0 0 $(arg robot_frame) $(arg camera_base_frame)"/>

    <!-- ============================================================ -->
    <!-- SEMANTIC SEGMENTATION                                       -->
    <!-- ============================================================ -->
    
    <arg name="run_segmentation" default="true"/>
    <group if="$(arg run_segmentation)">
        <remap from="semantic_inference/color/image_raw" to="/$(arg camera_name)/color/image_raw"/>
        <remap from="semantic_inference/semantic/image_raw" to="/$(arg camera_name)/semantic/image_raw"/>
        <remap from="semantic_inference/semantic/feature" to="/$(arg camera_name)/semantic/clip_vector"/>
        <include file="$(find semantic_inference_ros)/launch/openset_segmentation.launch"/>
    </group>

    <group unless="$(arg run_segmentation)">
        <node pkg="semantic_inference_ros" type="language_embedding_node" name="semantic_inference">
            <rosparam file="$(arg segmenter_config)"/>
        </node>
    </group>

    <!-- ============================================================ -->
    <!-- CLIO SCENE GRAPH PROCESSING                                 -->
    <!-- ============================================================ -->
    
    <arg name="run_clio" default="true"/>
    <group if="$(arg run_clio)">
        <remap from="/clio_node/input/camera/rgb/image_raw" to="/$(arg camera_name)/color/image_raw"/>
        <remap from="/clio_node/input/camera/depth_registered/image_rect" to="/$(arg camera_name)/aligned_depth_to_color/image_raw"/>
        <remap from="/clio_node/input/camera/semantic/image_raw" to="/$(arg camera_name)/semantic/image_raw"/>
        <remap from="/clio_node/input/camera/feature" to="/$(arg camera_name)/semantic/clip_vector"/>
        <remap from="/clio_node/input/camera/semantic/labels" to="/$(arg camera_name)/semantic/image_raw"/>
        
        <!-- Provide a viewable segmentation image for RViz -->
        <node pkg="topic_tools" type="relay" name="labels_relay"
            args="/$(arg camera_name)/color/image_raw /clio_node/reconstruction/camera/labels"/>
            
        <include file="$(find clio_ros)/launch/clio.launch" pass_all_args="true">
            <arg name="sensor_min_range" default="0.3" doc="minimum sensor range in meters"/>
            <arg name="sensor_max_range" default="4.0" doc="maximum sensor range in meters"/>
            <arg name="object_tasks_file" value="$(arg final_object_tasks_file)"/>
            <arg name="place_tasks_file" value="$(arg final_place_tasks_file)"/>
        </include>
    </group>

    <!-- ============================================================ -->
    <!-- INFORMATION DISPLAY                                         -->
    <!-- ============================================================ -->
    
    <!-- Display which environment and files are being used -->
    <param name="clio_environment_info/environment" value="$(arg environment)"/>
    <param name="clio_environment_info/object_tasks_file" value="$(arg final_object_tasks_file)"/>
    <param name="clio_environment_info/place_tasks_file" value="$(arg final_place_tasks_file)"/>

</launch>